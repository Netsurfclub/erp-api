type Query {
    products: [Product]
    suppliers: [Supplier]
}

type Mutation {
    createUser(input: CreateUserInput!): User!
    updateUserPassword(input: UpdateUserPasswordInput!): User!
    deleteUser(input: DeleteUserInput!): User!
    createProduct(input: CreateProductInput!): Product!
    createSupplier(input: CreateSupplierInput!): Supplier!
}

type User {
    id: ID!
    username: String!
    firstName: String!
    lastName: String!
    email: String!
}

type Product {
    id: ID!
    name: String!
    supplier: Supplier!
    price: Float!
    unit: String!
    photo: String
    onStock: Int!
}

type Supplier {
    id: ID!
    name: String!
    phone: String
    email: String
}

input CreateUserInput {
    username: String!
    password: String!
    confirmPassword: String!
    firstName: String!
    lastName: String!
    email: String!
}

input UpdateUserPasswordInput {
    userId: ID!
    currentPassword: String!
    newPassword: String!
    confirmNewPassword: String!
}

input DeleteUserInput {
    userId: ID!
}

input CreateProductInput {
    name: String!
    supplierId: Int!
    price: Float!
    unit: String!
    onStock: Int!
}

input CreateSupplierInput {
    name: String!
    phone: String
    email: String
}
