type Query {
    users: [User]
    products: [Product]
    suppliers: [Supplier]
}

type Mutation {
    createUser(request: CreateUserRequest!): CreateUserResponse!
    updateUserPassword(request: UpdateUserPasswordInputRequest!): UpdateUserPasswordInputResponse!
    createProduct(request: CreateProductRequest!): CreateProductResponse!
    createSupplier(request: CreateSupplierRequest!): CreateSupplierResponse!
}

type CreateUserResponse {
    user: User
    errorMessage: String
}

type UpdateUserPasswordInputResponse {
    user: User
    errorMessage: String
}

type CreateProductResponse {
    product: Product
    errorMessage: String
}

type CreateSupplierResponse {
    product: Product
    errorMessage: String
}

type User {
    id: ID!
    username: String!
    firstName: String!
    lastName: String!
    email: String!
}

type Product {
    id: ID!
    name: String!
    supplier: Supplier!
    price: Float!
    unit: String!
    photo: String
    onStock: Int!
}

type Supplier {
    id: ID!
    name: String!
    phone: String
    email: String
}

input CreateUserRequest {
    input: UserInput!
}

input UpdateUserPasswordInputRequest {
    input: UpdateUserPasswordInput!
}

input CreateProductRequest {
    input: ProductInput!
}

input CreateSupplierRequest {
    input: SupplierInput!
}

input UserInput {
    username: String!
    password: String!
    confirmPassword: String!
    firstName: String!
    lastName: String!
    email: String!
}

input UpdateUserPasswordInput {
    userId: ID!
    currentPassword: String!
    newPassword: String!
    confirmNewPassword: String!
}

input ProductInput {
    name: String
    supplierId: Int
    price: Float
    unit: String
    onStock: Int
}

input SupplierInput {
    name: String
    phone: String
    email: String
}
